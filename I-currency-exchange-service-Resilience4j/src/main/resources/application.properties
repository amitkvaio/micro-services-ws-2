spring.config.import=optional:configserver:http://localhost:8888
spring.application.name=currency-exchange-service-Resilience4j
server.port=8080

#For Retry
resilience4j.retry.instances.currencyConversionServiceRetry.maxAttempts=3
#maximum how many times it will attempts

resilience4j.retry.instances.currencyConversionServiceRetry.waitDuration=10s
#We can also configure time interval between retries.

resilience4j.retry.instances.currencyConversionServiceRetry.enableExponentialBackoff=true
#it will make each subsequent request, it would wait for a little longer.

#Publish Application(Register with Eureka)
eureka.client.service-url.default-zone=http://localhost:8761/eureka


#For Circuit Breaker
# CircuitBreaker configuration for "orderService"
resilience4j.circuitbreaker.instances.currencyConversionServiceWithCircuitBreaker.sliding-window-size=5
resilience4j.circuitbreaker.instances.currencyConversionServiceWithCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.currencyConversionServiceWithCircuitBreaker.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.currencyConversionServiceWithCircuitBreaker.permitted-number-of-calls-in-half-open-state=2

# sliding-window-size=5 --> Keep last 5 exam results.
# failure-rate-threshold=50 --> If more than half are failed --> Stop giving exams.
# wait-duration-in-open-state=10s --> Take a break for 10 seconds.
# permitted-number-of-calls-in-half-open-state=2 --> Try 2 sample exams to check recovery.